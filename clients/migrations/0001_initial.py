# Generated by Django 5.2.5 on 2025-09-05 20:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_profile_created_at_profile_onboarding_completed_and_more'),
        ('tasks', '0002_remove_taskapplication_available_time_and_more'),
        ('workers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('task_published', 'Task Published'), ('worker_applied', 'Worker Applied'), ('task_accepted', 'Task Accepted'), ('task_completed', 'Task Completed'), ('payment_reminder', 'Payment Reminder'), ('favorite_worker_online', 'Favorite Worker Online'), ('system_update', 'System Update'), ('promotion', 'Promotion')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField(max_length=500)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_notifications', to='accounts.profile')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.servicerequest')),
                ('related_worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workers.workerprofile')),
            ],
            options={
                'verbose_name': 'Client Notification',
                'verbose_name_plural': 'Client Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Client bio or description', max_length=500)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('address', models.TextField(blank=True, help_text='Full address', max_length=300)),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact number', max_length=20)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='clients/profiles/')),
                ('is_verified', models.BooleanField(default=False, help_text='Account verification status')),
                ('total_tasks_published', models.PositiveIntegerField(default=0)),
                ('total_tasks_completed', models.PositiveIntegerField(default=0)),
                ('total_amount_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('preferred_language', models.CharField(choices=[('fr', 'Français'), ('ar', 'العربية'), ('en', 'English')], default='fr', max_length=10)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to='accounts.profile')),
            ],
            options={
                'verbose_name': 'Client Profile',
                'verbose_name_plural': 'Client Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('push_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('theme_preference', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='auto', max_length=10)),
                ('language', models.CharField(choices=[('fr', 'Français'), ('ar', 'العربية'), ('en', 'English')], default='fr', max_length=10)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('workers_only', 'Workers Only'), ('private', 'Private')], default='workers_only', max_length=20)),
                ('show_last_seen', models.BooleanField(default=True)),
                ('allow_contact_from_workers', models.BooleanField(default=True)),
                ('auto_detect_location', models.BooleanField(default=True)),
                ('search_radius_km', models.PositiveIntegerField(default=10, help_text='Search radius in kilometers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_settings', to='accounts.profile')),
            ],
            options={
                'verbose_name': 'Client Settings',
                'verbose_name_plural': 'Client Settings',
            },
        ),
        migrations.CreateModel(
            name='FavoriteWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='Private notes about this worker', max_length=200)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('times_hired', models.PositiveIntegerField(default=0)),
                ('total_spent_with_worker', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_rating_given', models.PositiveIntegerField(blank=True, help_text='Last rating given to this worker', null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_workers', to='accounts.profile')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by_clients', to='workers.workerprofile')),
            ],
            options={
                'verbose_name': 'Favorite Worker',
                'verbose_name_plural': 'Favorite Workers',
                'ordering': ['-added_at'],
                'unique_together': {('client', 'worker')},
            },
        ),
    ]
